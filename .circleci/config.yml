# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  # Print Pipeline ID
  print_pipeline_id:
    steps: 
      - run: |
          echo "Pipeline ID is: $CIRCLE_WORKFLOW_ID "
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
jobs:
  my_error_job:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - run: return 1
  my_error_handling_job:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - run: 
          name: handling error
          command: echo "Hello ERROR :)"
          when:  on_fail

  save_hello_world_output:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id
      - run: 
          name: "Exercise to save a file for sharing"
          command: |
            echo "Hello world " > /tmp/output.txt
      - persist_to_workspace:
          root: /tmp
          paths: 
            - "output.txt"
  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id
      - attach_workspace:
          at: /tmp
      - run:
          name : "print shared file"
          command: |
            cat /tmp/output.txt
  print_hello:
    environment:
      message: "Hello"
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id
      - run: |
          echo ${message}
  print_world:
    environment:
      message: " World !"
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id
      - run: |
          echo ${message}
          echo $my_name
# Orchestrate or schedule a set of jobs
workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - welcome/run
      - print_hello
      - print_world:
          requires: [print_hello]
      - save_hello_world_output
      - print_output_file:
          requires: [save_hello_world_output]
      - my_error_job
